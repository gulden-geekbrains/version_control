# Инструкция по Git

## Создание репозитория
Функция *git init* используется для создания нового пустого репозитория Git или для повторной инициализации существующего.
```sh
git init
```

## Создание коммитов 
### Git status
команда используется для просмотра наличия внесенных изменений в проект.
```sh
git status
```

### Git add
Команда используется для добавления изменений в коммит.
```sh
git add <имя файла>
```

### Git commit
Команда, которая фиксирует изменения в репозитории. Создается снимок (коммит) текущего состояния проекта, включая все внесенные изменения. Каждое такое сохранение имеет уникальный идентификатор, который позволяет отслеживать историю изменений в проекте
```sh
git commit -m "Комментарий к текущему коммиту"
```
### Git log
Функция предназначена для отображения всей истории изменений проекта. Без дополнений дает развернутую информацию о каждом изменении.
```sh
git log
```
Если к функции *git log* добавить *--oneline*, то информация об изменениях будет выведена в сжатом виде.
```sh
git log --oneline
```

## Работа с различными ветками
### Git checkout
Команда *git checkout* используется для переключения между ветками, проверки коммитов и отката изменений.
```sh
git checkout
```

### Git diff
Команда используется для вычисления разницы между любыми двуми Git-деревьями.
```sh
git diff <номер одного изменения> <номер второго изменения>
```

### Git branch
Отображение всех веток
```sh
git branch
```

### Git checkout
Перемещение между ветками 
```sh
git checkout <имя_ветки>
```

### Git 
Создание новой ветки
```sh
git branch <имя_ветки>
```

### Git log --oneline --graph
Просмотр текущей ветки и истории слияний
```sh
git log --oneline --graph
```

### Git branch -d <>
Удаление ветки
```sh
git branch -d <имя ветки>
```

## Работа с удаленным репозирорием
### Git clone
Создание копии существующего репозитория
``` sh
git clone <ссылка_на_репозиторий>
```

### Git remote
Создание, просмотр и соединени е с другими репозиториями
```sh
git remote add origin <ссылка_на_репозиторий>
```

### Git push
Внесение изменений в удаленный репозиторий
```sh
git push -u origin main
```

### Git pull
Извлечение содержимого из удаленного репозитория и обновление локального репозитория этим содержимым
```sh
git pull
```

